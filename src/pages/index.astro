---
import yahooFinance from 'yahoo-finance';

import Layout from '../layouts/Layout.astro';
import Cards from '../components/Cards.vue';

const date = new Date();
const months = ["01", "02", "03", "04", "05", "06","07", "08", "09", "10", "11", "12"];

const fullDate = `${date.getFullYear()}-${months[date.getMonth()]}-${date.getDate() < 10 ? `0${date.getDate()}` : date.getDate()}`;
const fullFromDate = `${date.getFullYear() - 5}-${months[date.getMonth()]}-${date.getDate() < 10 ? `0${date.getDate()}` : date.getDate()}`;

const tickers = {
	ETF: {
		0: {
			ticker: "VUSA.AS",
			name: "Vanguard S&P 500 UCITS",
			data: {},
			logo: "assets/vanguard.png",
		},
		1: {
			ticker: "IWDA.AS",
			name: "iShares Core MSCI World UCITS",
			data: {},
			logo: "assets/ishares.png"
		},
		2: {
			ticker: "VWRL.AS",
			name: "Vanguard FTSE All-World UCITS",
			data: {},
			logo: "assets/vanguard.png",
		},
	},
	STOCKS: {
		0: {
			ticker: "ADYEN.AS",
			name: "Adyen N.V.",
			data: {},
			logo: "assets/adyen.png"
		},
		1: {
			ticker: "TKWY.AS",
			name: 'Just Eat Takeaway N.V.',
			data: {},
			logo: "assets/just-eat-takeaway.png"
		},
		2: {
			ticker: "AD.AS",
			name: "Ahold Delhaize N.V.",
			data: {},
			logo: "assets/ahold-delhaize.png"
		},
	},
	US_STOCKS: {
		0: {
			ticker: "TSLA",
			name: "Tesla, Inc.",
			data: {},
			logo: "assets/tesla.png"
		},
		1: {
			ticker: "META",
			name: "Meta Platforms, Inc.",
			data: {},
			logo: "assets/meta.png"
		},
		2: {
			ticker: "AMD",
			name: "Advanced Micro Devices, Inc.",
			data: {},
			logo: "assets/amd.png"
		},
	},
	MATERIALS: {
		0: {
			ticker: "CL=F",
			name: "Ruwe Olie",
			data: {},
			logo: "assets/crudeoil.png"
		},
		1: {
			ticker: "GC=F",
			name: "Goud",
			data: {},
			logo: "assets/gold.png"
		},
		2: {
			ticker: "KC=F",
			name: "Koffie",
			data: {},
			logo: 'assets/coffee.png'
		}
	}
}

for (let i = 0; i < Object.keys(tickers.ETF).length; i++) {
	const data = await yahooFinance.historical({
		symbol: tickers.ETF[i].ticker,
		from: fullFromDate,
		to: fullDate,
		period: 'm'
	}, function (err, quotes) {
		return quotes;
	});

	tickers.ETF[i].data = await data;
}

for (let i = 0; i < Object.keys(tickers.STOCKS).length; i++) {
	const data = await yahooFinance.historical({
		symbol: tickers.STOCKS[i].ticker,
		from: fullFromDate,
		to: fullDate,
		period: 'm'
	}, function (err, quotes) {
		return quotes;
	});

	tickers.STOCKS[i].data = await data;
}

for (let i = 0; i < Object.keys(tickers.US_STOCKS).length; i++) {
	const data = await yahooFinance.historical({
		symbol: tickers.US_STOCKS[i].ticker,
		from: fullFromDate,
		to: fullDate,
		period: 'm'
	}, function (err, quotes) {
		return quotes;
	});

	tickers.US_STOCKS[i].data = await data;
}

for (let i = 0; i < Object.keys(tickers.MATERIALS).length; i++) {
	const data = await yahooFinance.historical({
		symbol: tickers.MATERIALS[i].ticker,
		from: fullFromDate,
		to: fullDate,
		period: 'm'
	}, function (err, quotes) {
		return quotes;
	});

	tickers.MATERIALS[i].data = await data;
}
---

<Layout title="Horizon Beleggen | Screener voor aandelen, ETF's en meer">
	<main>
		<div id="etfs" class="content">
			<Cards type="ETF's" tickers={tickers.ETF} client:load/>
		</div>
		<div id="stocks" class="content">
			<Cards type="aandelen" tickers={tickers.STOCKS} client:load/>
		</div>
		<div id="us-stocks" class="content">
			<Cards type="V.S. aandelen" tickers={tickers.US_STOCKS} client:load/>
		</div>
		<div id="materials" class="content">
			<Cards type="Grondstoffen" tickers={tickers.MATERIALS} client:load/>
		</div>
	</main>
</Layout>

<style lang="scss">
	main {
		background-color: #f9fafb;
		padding-bottom: 50px;
	}
</style>
